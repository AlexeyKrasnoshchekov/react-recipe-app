{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","time","type","cuisine","caloriesFloor","Math","floor","className","style","recipe","heading","ingredientsList","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","URL","process","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","placeholder","value","onChange","target","label","totalTime","dishType","cuisineType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+QA2BeA,EAxBA,SAAC,GAAgE,IAA/DC,EAA8D,EAA9DA,MAAOC,EAAuD,EAAvDA,SAAUC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAE1DC,EAAgBC,KAAKC,MAAMR,GAE/B,OACI,sBAAKS,UAAWC,IAAMC,OAAtB,UACI,6BAAKZ,IACL,gCAAK,sBAAMU,UAAWC,IAAME,QAAvB,wBAAL,IAAwDR,KACxD,gCAAK,sBAAMK,UAAWC,IAAME,QAAvB,2BAAL,IAA2DP,KAC3D,oBAAII,UAAWC,IAAMG,gBAArB,SACKX,EAAYY,KAAI,SAAAC,GAAU,OAEnB,6BAAKA,EAAWC,YAI5B,8BAAG,sBAAMP,UAAWC,IAAME,QAAvB,2BAAH,IAAyDT,EAAzD,UACA,8BAAG,sBAAMM,UAAWC,IAAME,QAAvB,qBAAH,IAAmDN,EAAnD,eACA,qBAAKG,UAAWC,IAAMT,MAAOgB,IAAKhB,EAAOiB,IAAI,S,MCiD1CC,MAlEf,WACE,IAIA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAG,0CAAsCF,EAAtC,mBARMG,WAQN,oBANOA,oCAQhBC,qBAAU,WACRC,MACC,CAACL,IAEJ,IAAMK,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAML,GADZ,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBb,EAAWa,EAAKC,MAChBC,QAAQC,IAAI,UAAWjB,GAJN,2CAAH,qDAkBhB,OACE,sBAAKZ,UAAU,MAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,uBAAMA,UAAU,cAAc8B,SAdhB,SAACC,GACjBA,EAAEC,iBACFf,EAASH,GACTC,EAAU,KAWR,UACE,uBACAkB,YAAc,qBACZtC,KAAK,OACLK,UAAU,aACVkC,MAAOpB,EACPqB,SAda,SAACJ,GACpBhB,EAAUgB,EAAEK,OAAOF,UAef,wBAAQvC,KAAK,SAASK,UAAU,gBAAhC,uBAIF,qBAAKA,UAAU,mBAAf,SACGY,EAAQP,KAAI,SAACH,GAAD,OACX,cAAC,EAAD,CAEEZ,MAAOY,EAAOA,OAAOmC,MACrB9C,SAAUW,EAAOA,OAAOX,SACxBC,MAAOU,EAAOA,OAAOV,MACrBC,YAAaS,EAAOA,OAAOT,YAC3BC,KAAMQ,EAAOA,OAAOoC,UACpB3C,KAAMO,EAAOA,OAAOqC,SACpB3C,QAASM,EAAOA,OAAOsC,aAPlBtC,EAAOA,OAAOmC,gBC3ChBI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,QAAU,wBAAwB,gBAAkB,mC","file":"static/js/main.3928a5b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from \"./recipe.module.css\";\r\n\r\nconst Recipe = ({title, calories, image, ingredients, time, type, cuisine}) => {\r\n\r\n    let caloriesFloor = Math.floor(calories);\r\n\r\n    return (\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <div><span className={style.heading}>Dish type:</span> {type}</div>\r\n            <div><span className={style.heading}>Cuisine type:</span> {cuisine}</div>\r\n            <ol className={style.ingredientsList}>\r\n                {ingredients.map(ingredient => \r\n                    (\r\n                        <li>{ingredient.text}</li>\r\n                    )\r\n                    )}\r\n            </ol>\r\n            <p><span className={style.heading}>Cooking time:</span> {time} min</p>\r\n            <p><span className={style.heading}>Weight:</span> {caloriesFloor} calories</p>\r\n            <img className={style.image} src={image} alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Recipe;","import React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe.js\";\nimport \"./App.css\";\n\nfunction App() {\n  const APP_ID = process.env.REACT_APP_API_ID;\n\n  const APP_KEY = process.env.REACT_APP_API_KEY;\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n\n  const URL = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(URL);\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log('recipes', recipes);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n    \n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"app-title\">Search your recipe</h1>\n      <form className=\"search-form\" onSubmit={getSearch}>\n        <input\n        placeholder = \"type your query...\"\n          type=\"text\"\n          className=\"search-bar\"\n          value={search}\n          onChange={updateSearch}\n        />\n        <button type=\"submit\" className=\"search-button\">\n          Search\n        </button>\n      </form>\n      <div className=\"recipe-container\">\n        {recipes.map((recipe) => (\n          <Recipe\n            key={recipe.recipe.label}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n            time={recipe.recipe.totalTime}\n            type={recipe.recipe.dishType}\n            cuisine={recipe.recipe.cuisineType}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__1EO7u\",\"image\":\"recipe_image__1nqeL\",\"heading\":\"recipe_heading__3EOb-\",\"ingredientsList\":\"recipe_ingredientsList__1jBNR\"};"],"sourceRoot":""}